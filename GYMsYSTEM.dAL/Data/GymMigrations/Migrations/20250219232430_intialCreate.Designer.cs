// <auto-generated />
using System;
using GymSystem.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GYMsYSTEM.dAL.Data.GymMigrations.Migrations
{
    [DbContext(typeof(GymSystemContext))]
    [Migration("20250219232430_intialCreate")]
    partial class intialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymSystem.DAL.Entities.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Identity.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FristName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Identity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DailyPlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HaveDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStopped")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MonthlyPlanId")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NutritionPlanId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RemainingDays")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StopDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DailyPlanId");

                    b.HasIndex("MonthlyPlanId");

                    b.HasIndex("NutritionPlanId");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MealsCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("NutritionPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealsCategoryId");

                    b.HasIndex("NutritionPlanId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.MealsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MealsCategories");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriptionPlanId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("SessionId1");

                    b.HasIndex("SubscriptionPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.NutritionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DailyPlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HaveDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("MonthlyPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RemainingDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StopDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DailyPlanId");

                    b.HasIndex("MonthlyPlanId");

                    b.ToTable("Subscriber");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<bool>("IsStopped")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StopDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlan");

                    b.HasDiscriminator().HasValue("SubscriptionPlan");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.DailyPlan", b =>
                {
                    b.HasBaseType("GymSystem.DAL.Entities.SubscriptionPlan");

                    b.HasDiscriminator().HasValue("DailyPlan");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.MonthlyPlan", b =>
                {
                    b.HasBaseType("GymSystem.DAL.Entities.SubscriptionPlan");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("MonthlyPlan");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Attendance", b =>
                {
                    b.HasOne("GymSystem.DAL.Entities.Session", "Session")
                        .WithMany("Attendances")
                        .HasForeignKey("SessionId");

                    b.HasOne("GymSystem.DAL.Entities.Identity.AppUser", "User")
                        .WithMany("Attendances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Identity.Address", b =>
                {
                    b.HasOne("GymSystem.DAL.Entities.Identity.AppUser", "User")
                        .WithOne("Address")
                        .HasForeignKey("GymSystem.DAL.Entities.Identity.Address", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Identity.AppUser", b =>
                {
                    b.HasOne("GymSystem.DAL.Entities.DailyPlan", "DailyPlan")
                        .WithMany()
                        .HasForeignKey("DailyPlanId");

                    b.HasOne("GymSystem.DAL.Entities.MonthlyPlan", "MonthlyPlan")
                        .WithMany()
                        .HasForeignKey("MonthlyPlanId");

                    b.HasOne("GymSystem.DAL.Entities.NutritionPlan", "NutritionPlan")
                        .WithMany("Users")
                        .HasForeignKey("NutritionPlanId");

                    b.OwnsMany("GymSystem.DAL.Entities.Identity.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner("User")
                                .HasForeignKey("UserId");

                            b1.Navigation("User");
                        });

                    b.Navigation("DailyPlan");

                    b.Navigation("MonthlyPlan");

                    b.Navigation("NutritionPlan");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Meal", b =>
                {
                    b.HasOne("GymSystem.DAL.Entities.MealsCategory", "MealsCategory")
                        .WithMany("Meals")
                        .HasForeignKey("MealsCategoryId");

                    b.HasOne("GymSystem.DAL.Entities.NutritionPlan", "NutritionPlan")
                        .WithMany("Meals")
                        .HasForeignKey("NutritionPlanId");

                    b.Navigation("MealsCategory");

                    b.Navigation("NutritionPlan");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Membership", b =>
                {
                    b.HasOne("GymSystem.DAL.Entities.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GymSystem.DAL.Entities.Session", null)
                        .WithMany("Memberships")
                        .HasForeignKey("SessionId1");

                    b.HasOne("GymSystem.DAL.Entities.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany()
                        .HasForeignKey("SubscriptionPlanId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GymSystem.DAL.Entities.Identity.AppUser", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId");

                    b.Navigation("Session");

                    b.Navigation("SubscriptionPlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Session", b =>
                {
                    b.HasOne("GymSystem.DAL.Entities.Identity.AppUser", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Subscriber", b =>
                {
                    b.HasOne("GymSystem.DAL.Entities.DailyPlan", "DailyPlan")
                        .WithMany("Subscribers")
                        .HasForeignKey("DailyPlanId");

                    b.HasOne("GymSystem.DAL.Entities.MonthlyPlan", "MonthlyPlan")
                        .WithMany("Subscribers")
                        .HasForeignKey("MonthlyPlanId");

                    b.Navigation("DailyPlan");

                    b.Navigation("MonthlyPlan");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Identity.AppUser", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Attendances");

                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.MealsCategory", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.NutritionPlan", b =>
                {
                    b.Navigation("Meals");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.Session", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.DailyPlan", b =>
                {
                    b.Navigation("Subscribers");
                });

            modelBuilder.Entity("GymSystem.DAL.Entities.MonthlyPlan", b =>
                {
                    b.Navigation("Subscribers");
                });
#pragma warning restore 612, 618
        }
    }
}
